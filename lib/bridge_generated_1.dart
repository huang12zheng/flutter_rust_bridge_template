// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.50.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member

import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;

import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated_1.io.dart' if (dart.library.html) 'bridge_generated_1.web.dart';
import 'package:meta/meta.dart';

part 'bridge_generated_1.freezed.dart';

abstract class ApiDb {
  Future<ISurreal> getDb({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetDbConstMeta;
}

@sealed
class SurrealDb extends FrbOpaque {
  final ApiDb bridge;
  SurrealDb.fromRaw(int ptr, int size, this.bridge) : super.unsafe(ptr, size);
  @override
  DropFnType get dropFn => bridge.dropOpaqueSurrealDb;

  @override
  ShareFnType get shareFn => bridge.shareOpaqueSurrealDb;

  @override
  OpaqueTypeFinalizer get staticFinalizer => bridge.SurrealDbFinalizer;
}

@freezed
class ISurreal with _$ISurreal {
  const factory ISurreal.iDb(
    SurrealDb field0,
  ) = ISurreal_IDb;
}

class ApiDbImpl implements ApiDb {
  final ApiDbPlatform _platform;
  factory ApiDbImpl(ExternalLibrary dylib) => ApiDbImpl.raw(ApiDbPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory ApiDbImpl.wasm(FutureOr<WasmModule> module) => ApiDbImpl(module as ExternalLibrary);
  ApiDbImpl.raw(this._platform);
  Future<ISurreal> getDb({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_get_db(port_),
      parseSuccessData: _wire2api_i_surreal,
      constMeta: kGetDbConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetDbConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "get_db",
        argNames: [],
      );

// Section: wire2api

  SurrealDb _wire2api_SurrealDb(dynamic raw) {
    return SurrealDb.fromRaw(raw[0], raw[1], this);
  }

  ISurreal _wire2api_i_surreal(dynamic raw) {
    switch (raw[0]) {
      case 0:
        return ISurreal_IDb(
          _wire2api_SurrealDb(raw[1]),
        );
      default:
        throw Exception("unreachable");
    }
  }
}

// Section: api2wire

// Section: finalizer
